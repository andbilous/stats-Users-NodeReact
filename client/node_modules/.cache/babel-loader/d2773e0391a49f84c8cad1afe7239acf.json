{"ast":null,"code":"import _slicedToArray from \"/Users/andbilous/Desktop/fullstack-task/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andbilous/Desktop/fullstack-task/client/src/pages/ProfilePage/ProfilePage.js\";\nimport React, { useEffect, useState } from 'react';\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport Legend from \"recharts/lib/component/Legend\";\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport axios from \"axios\";\n\nconst ProfilePage = ({\n  currentUserId\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const fetchData = (dateFrom, dateTo) => {\n    axios.get(`http://localhost:5000/user/${currentUserId}/${dateFrom}/${dateTo}`).then(res => {\n      setData(res.data.data);\n    });\n  };\n\n  useEffect(() => {\n    let dateTo = new Date(2019, 9, 15);\n    let dateFrom = new Date(dateTo.getTime() - 60 * 60 * 24 * 7 * 1000);\n    fetchData(dateFrom, dateTo);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n    bg: \"primary\",\n    variant: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    href: \"#home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Navbar\")), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, data.first_name, \" \", data.last_name), React.createElement(\"section\", {\n    style: {\n      margin: \"auto\",\n      display: \"grid\",\n      flexDirection: \"column\",\n      alignItems: 'center',\n      justifyContent: 'center',\n      border: '1px solid black',\n      width: '80%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"From\"), React.createElement(DayPicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"To\"), React.createElement(DayPicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Clicks\"), React.createElement(LineChart, {\n    width: 900,\n    height: 300,\n    data: data.stats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"clicks\",\n    stroke: \"#8884d8\",\n    activeDot: {\n      r: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Views\"), React.createElement(LineChart, {\n    width: 900,\n    height: 300,\n    data: data.stats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"views\",\n    stroke: \"red\",\n    activeDot: {\n      r: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))), React.createElement(Navbar, {\n    bg: \"primary\",\n    variant: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    href: \"#home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Navbar\")));\n};\n\nexport default ProfilePage;","map":{"version":3,"sources":["/Users/andbilous/Desktop/fullstack-task/client/src/pages/ProfilePage/ProfilePage.js"],"names":["React","useEffect","useState","Navbar","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Legend","DayPicker","axios","ProfilePage","currentUserId","data","setData","fetchData","dateFrom","dateTo","get","then","res","Date","getTime","first_name","last_name","margin","display","flexDirection","alignItems","justifyContent","border","width","stats","r"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport Legend from \"recharts/lib/component/Legend\";\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport axios from \"axios\";\n\n\nconst ProfilePage =({currentUserId})=>{\n    const [data, setData] = useState([]);\n\n    const fetchData=(dateFrom,dateTo)=>{\n        axios.get(`http://localhost:5000/user/${currentUserId}/${dateFrom}/${dateTo}`)\n            .then(res => {\n                setData(res.data.data);\n            });\n    };\n\n    useEffect(() => {\n        let dateTo = new Date(2019,9,15);\n        let dateFrom =  new Date(dateTo.getTime()-(60*60*24*7*1000));\n        fetchData(dateFrom,dateTo);\n    }, []);\n\n    return (\n       <>\n           <Navbar bg=\"primary\" variant=\"dark\">\n               <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n           </Navbar>\n           <h1>{data.first_name} {data.last_name}</h1>\n           <section style={\n               {\n                   margin:\"auto\",display:\"grid\",flexDirection:\"column\",alignItems:'center',\n                   justifyContent:'center',\n                   border:'1px solid black',width:'80%'\n               }\n           }>\n               <div>\n                   <h5>From</h5>\n                   <DayPicker />\n               </div>\n               <div>\n                   <h5>To</h5>\n                   <DayPicker />\n               </div>\n               <h5>Clicks</h5>\n               <LineChart\n                   width={900}\n                   height={300}\n                   data={data.stats}>\n                   <CartesianGrid  strokeDasharray=\"3 3\" />\n                   <XAxis dataKey=\"date\"  />\n                   <YAxis />\n                   <Tooltip />\n                   <Legend />\n                   <Line type=\"monotone\" dataKey=\"clicks\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n               </LineChart>\n               <h5>Views</h5>\n               <LineChart\n                   width={900}\n                   height={300}\n                   data={data.stats}>\n                   <CartesianGrid  strokeDasharray=\"3 3\" />\n                   <XAxis dataKey=\"date\"  />\n                   <YAxis />\n                   <Tooltip />\n                   <Legend />\n                   <Line type=\"monotone\" dataKey=\"views\" stroke=\"red\" activeDot={{ r: 8 }} />\n               </LineChart>\n           </section>\n           <Navbar bg=\"primary\" variant=\"dark\">\n               <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n           </Navbar>\n           </>\n    )\n};\n\nexport default  ProfilePage;\n"]},"metadata":{},"sourceType":"module"}